// ===================== Thai Weather & Accident Risk =====================

// üîπ ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÑ‡∏ó‡∏¢ ‚Üí ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© (WeatherAPI)
const provinceMap = {
  "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£": "Bangkok", "‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà": "Krabi", "‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ": "Kanchanaburi", "‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå": "Kalasin",
  "‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£": "Kamphaeng Phet", "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô": "Khon Kaen", "‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ": "Chanthaburi", "‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤": "Chachoengsao",
  "‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ": "Chon Buri", "‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó": "Chai Nat", "‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥": "Chaiyaphum", "‡∏ä‡∏∏‡∏°‡∏û‡∏£": "Chumphon",
  "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢": "Chiang Rai", "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà": "Chiang Mai", "‡∏ï‡∏£‡∏±‡∏á": "Trang", "‡∏ï‡∏£‡∏≤‡∏î": "Trat",
  "‡∏ï‡∏≤‡∏Å": "Tak", "‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å": "Nakhon Nayok", "‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°": "Nakhon Pathom", "‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°": "Nakhon Phanom",
  "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤": "Nakhon Ratchasima", "‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä": "Nakhon Si Thammarat", "‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå": "Nakhon Sawan",
  "‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ": "Nonthaburi", "‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™": "Narathiwat", "‡∏ô‡πà‡∏≤‡∏ô": "Nan", "‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨": "Bueng Kan",
  "‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå": "Buri Ram", "‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ": "Pathum Thani", "‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå": "Prachuap Khiri Khan",
  "‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ": "Prachin Buri", "‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ": "Pattani", "‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤": "Phra Nakhon Si Ayutthaya",
  "‡∏û‡∏∞‡πÄ‡∏¢‡∏≤": "Phayao", "‡∏û‡∏±‡∏á‡∏á‡∏≤": "Phang Nga", "‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á": "Phatthalung", "‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£": "Phichit",
  "‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å": "Phitsanulok", "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ": "Phetchaburi", "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå": "Phetchabun", "‡πÅ‡∏û‡∏£‡πà": "Phrae",
  "‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï": "Phuket", "‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°": "Maha Sarakham", "‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£": "Mukdahan", "‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô": "Mae Hong Son",
  "‡∏¢‡πÇ‡∏™‡∏ò‡∏£": "Yasothon", "‡∏¢‡∏∞‡∏•‡∏≤": "Yala", "‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î": "Roi Et", "‡∏£‡∏∞‡∏ô‡∏≠‡∏á": "Ranong",
  "‡∏£‡∏∞‡∏¢‡∏≠‡∏á": "Rayong", "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ": "Ratchaburi", "‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ": "Lop Buri", "‡∏•‡∏≥‡∏õ‡∏≤‡∏á": "Lampang",
  "‡∏•‡∏≥‡∏û‡∏π‡∏ô": "Lamphun", "‡πÄ‡∏•‡∏¢": "Loei", "‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©": "Si Sa Ket", "‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£": "Sakon Nakhon",
  "‡∏™‡∏á‡∏Ç‡∏•‡∏≤": "Songkhla", "‡∏™‡∏ï‡∏π‡∏•": "Satun", "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£": "Samut Prakan", "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°": "Samut Songkhram",
  "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£": "Samut Sakhon", "‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß": "Sa Kaeo", "‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ": "Saraburi", "‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ": "Sing Buri",
  "‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢": "Sukhothai", "‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ": "Suphan Buri", "‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ": "Surat Thani", "‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå": "Surin",
  "‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢": "Nong Khai", "‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π": "Nong Bua Lam Phu", "‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á": "Ang Thong", "‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç": "Amnat Charoen",
  "‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ": "Udon Thani", "‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå": "Uttaradit", "‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ": "Uthai Thani", "‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ": "Ubon Ratchathani"
};

// üî∏ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global
let accidentData = {};

// üîπ Helper: ‡∏•‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
function normalizeProvince(name) {
  return name ? name.replace(/‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î/g, "").replace(/‡∏à\./g, "").replace(/\s+/g, "").trim() : "";
}

// üîπ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å Flask
async function loadAccidentData() {
  try {
    const res = await fetch("http://127.0.0.1:5000/accident_data");
    const data = await res.json();
    if (data.error) throw new Error(data.error);
    accidentData = {};
    Object.keys(data).forEach(k => (accidentData[normalizeProvince(k)] = data[k]));
    console.log("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", Object.keys(accidentData).length, "‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î");
  } catch (err) {
    console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err);
  }
}

// ===================== ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏® + ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á =====================
async function getData() {
  const inputRaw = document.getElementById("province").value.trim();
  const provinceTH = normalizeProvince(inputRaw);
  const output = document.getElementById("result");

  if (!provinceTH) return alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö");

  output.innerHTML = "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...";
  output.style.background = "#f1f5f9";

  const provinceEN = provinceMap[provinceTH] || provinceTH;
  const apiKey = "f181eb39c93f4e73bbc122856250910";

  try {
    const weatherURL = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${encodeURIComponent(provinceEN)}&days=3&lang=th`;
    const resWeather = await fetch(weatherURL);
    const weatherData = await resWeather.json();
    if (weatherData.error) throw new Error(weatherData.error.message);

    const { temp_c, humidity, precip_mm, condition } = weatherData.current;
    const forecast = weatherData.forecast.forecastday;
    const todayRainChance = forecast[0].day.daily_chance_of_rain;

    if (Object.keys(accidentData).length === 0) await loadAccidentData();
    const provinceInfo = accidentData[provinceTH];
    if (!provinceInfo) {
      output.innerHTML = `‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å DDC ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î "${inputRaw}"`;
      output.style.background = "#fee2e2";
      return;
    }

    const total = provinceInfo.total;
    const monthly = provinceInfo.monthly || {};
    const avg = provinceInfo.average || 0;
    const thaiMonths = ["‡∏°.‡∏Ñ", "‡∏Å.‡∏û", "‡∏°‡∏µ.‡∏Ñ", "‡πÄ‡∏°.‡∏¢", "‡∏û.‡∏Ñ", "‡∏°‡∏¥.‡∏¢", "‡∏Å.‡∏Ñ", "‡∏™.‡∏Ñ", "‡∏Å.‡∏¢", "‡∏ï.‡∏Ñ", "‡∏û.‡∏¢", "‡∏ò.‡∏Ñ"];
    const currentMonth = thaiMonths[new Date().getMonth()];
    const monthValue = monthly[currentMonth] || 0;
    const diffPercent = avg === 0 ? 0 : ((monthValue - avg) / avg) * 100;
    const diffLabel = diffPercent > 5 ? "‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢" : diffPercent < -5 ? "‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢" : "‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢";

    let totalRisk = "low";
    if (todayRainChance > 80 || diffPercent > 15) totalRisk = "very_high";
    else if (todayRainChance > 60 || diffPercent > 5) totalRisk = "high";
    else if (todayRainChance > 30 || diffPercent > 0) totalRisk = "medium";

    const bgColor = { low: "#dcfce7", medium: "#fef9c3", high: "#fed7aa", very_high: "#fecaca" }[totalRisk];
    const rainBar = `
      <div style="background:#e5e7eb;border-radius:8px;overflow:hidden;height:10px;margin-top:4px;">
        <div style="width:${todayRainChance}%;height:100%;
                    background:${todayRainChance>80?'#2563eb':todayRainChance>50?'#60a5fa':'#93c5fd'};
                    transition:width 0.5s;"></div>
      </div>`;

    output.style.background = bgColor;
    output.style.padding = "20px";
    output.style.borderRadius = "14px";
    output.style.boxShadow = "0 3px 8px rgba(0,0,0,0.15)";
    output.style.textAlign = "left";

    let html = `
      <h2>üìç ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ${inputRaw}</h2>
      <p>‚õÖ ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®: ${condition.text}</p>
      <p>üå°Ô∏è ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥: ${temp_c} ¬∞C &nbsp; üíß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô: ${humidity}%</p>
      <p>üåßÔ∏è ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏ù‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${precip_mm} ‡∏°‡∏°.</p>
      <p>üåßÔ∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ù‡∏ô‡∏ï‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: <b>${todayRainChance}%</b></p>
      ${rainBar}
      <p>üöß ‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ (${currentMonth}): ${monthValue.toLocaleString()} ‡∏Ñ‡∏ô</p>
      <p>üìà ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ${diffLabel} (${diffPercent.toFixed(1)}%)</p>
      <p>‚ò†Ô∏è ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏õ‡∏µ: ${total.toLocaleString()} ‡∏Ñ‡∏ô</p>
      <h3>üî• ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏£‡∏ß‡∏°: <b style="color:${riskColor(totalRisk)}">${totalRisk.toUpperCase()}</b></h3>
      <hr><h3>üìÜ ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏® 3 ‡∏ß‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤</h3>
      <table style="width:100%;border-collapse:collapse">
        <tr style="background:#e2e8f0">
          <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®</th><th>üå°Ô∏è ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î-‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î (¬∞C)</th><th>üíß ‡∏ù‡∏ô (%)</th>
        </tr>`;
    forecast.forEach(f => {
      html += `<tr style="border-top:1px solid #ccc">
        <td>${f.date}</td>
        <td>${f.day.condition.text}</td>
        <td>${f.day.maxtemp_c} / ${f.day.mintemp_c}</td>
        <td>${f.day.daily_chance_of_rain}%</td></tr>`;
    });
    html += `</table><br><small>üïì ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å WeatherAPI + DDC (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ~02:00 ‡∏ô.)</small>`;
    output.innerHTML = html;

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ô‡∏±‡πâ‡∏ô
    await loadLocalNews(provinceTH);

  } catch (err) {
    console.error(err);
    output.innerHTML = `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}`;
    output.style.background = "#fee2e2";
  }
}

function riskColor(level) {
  return { very_high: "red", high: "darkorange", medium: "goldenrod", low: "green" }[level];
}

// ===================== ‡∏î‡∏∂‡∏á‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô =====================
async function loadLocalNews(provinceTH) {
  const newsBox = document.getElementById("news");
  if (!newsBox) return;
  newsBox.innerHTML = "üì∞ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πà‡∏≤‡∏ß...";
  try {
    const res = await fetch(`http://127.0.0.1:5000/news/${provinceTH}`);
    const data = await res.json();
    if (data.error) throw new Error(data.error);

    newsBox.innerHTML = data.map(n => `
      <div style="margin-bottom:10px">
        <a href="${n.link}" target="_blank" style="font-weight:bold;color:#2563eb">${n.title}</a>
        <p>${n.summary}</p>
      </div>`).join("") || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î";
  } catch (err) {
    newsBox.innerHTML = `‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πà‡∏≤‡∏ß‡πÑ‡∏î‡πâ (${err.message})`;
  }
}

window.onload = loadAccidentData;
